- Install app from ngrok for Windowns and install the file in the same folder to make sure it works.

- Copy and add in the terminal the authtoken
  ./ngrok config add-authtoken <token>
  ngrok config add-authtoken 2heDKTMcMvZMNpJyXVCWCwIwmV7_4uBAagpx6xRYXXaScgv4i

- Run command to open domain
  ./ngrok http --domain=mighty-yak-rational.ngrok-free.app 3000

- Run local server to see the domain working
  npm run dev

-stop ngrok running

-Create a tunel which will be use for your URL -> ngrok website > domains > tunnel
ngrok http --domain=caring-clearly-crow.ngrok-free.app 3000

-- Add in Clerk.com > Webhooks the following:
https://caring-clearly-crow.ngrok-free.app/api/webhooks/clerk

-- Building webhooks
line 7 in .env file

-- install svix
npm install svix

-- create a webhook inside api foler api>webhooks>clerk> route.ts

-- add the route code from clerk docs
https://clerk.com/docs/integrations/webhooks/sync-data

---

import { Webhook } from 'svix'
import { headers } from 'next/headers'
import { WebhookEvent } from '@clerk/nextjs/server'

export async function POST(req: Request) {

// You can find this in the Clerk Dashboard -> Webhooks -> choose the endpoint
const WEBHOOK_SECRET = process.env.WEBHOOK_SECRET

if (!WEBHOOK_SECRET) {
throw new Error('Please add WEBHOOK_SECRET from Clerk Dashboard to .env or .env.local')
}

// Get the headers
const headerPayload = headers();
const svix_id = headerPayload.get("svix-id");
const svix_timestamp = headerPayload.get("svix-timestamp");
const svix_signature = headerPayload.get("svix-signature");

// If there are no headers, error out
if (!svix_id || !svix_timestamp || !svix_signature) {
return new Response('Error occured -- no svix headers', {
status: 400
})
}

// Get the body
const payload = await req.json()
const body = JSON.stringify(payload);

// Create a new Svix instance with your secret.
const wh = new Webhook(WEBHOOK_SECRET);

let evt: WebhookEvent

// Verify the payload with the headers
try {
evt = wh.verify(body, {
"svix-id": svix_id,
"svix-timestamp": svix_timestamp,
"svix-signature": svix_signature,
}) as WebhookEvent
} catch (err) {
console.error('Error verifying webhook:', err);
return new Response('Error occured', {
status: 400
})
}

// Do something with the payload
// For this guide, you simply log the payload to the console
const { id } = evt.data;
const eventType = evt.type;
console.log(`Webhook with and ID of ${id} and type of ${eventType}`)
console.log('Webhook body:', body)

return new Response('', { status: 200 })
}

---

-- add the following to middleware.ts
export default authMiddleware({
publicRoutes: ["/api/webhooks(.*)"]
});
